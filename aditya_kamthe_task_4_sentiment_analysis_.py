# -*- coding: utf-8 -*-
"""Aditya Kamthe Task 4 SENTIMENT ANALYSIS .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cDRumQPj2Rj4fK4jmQ82Hf76t4NWqlfD
"""

pip install pandas matplotlib seaborn nltk scikit-learn textblob

import pandas as pd

df = pd.read_csv("/content/drive/MyDrive/task data set/Instagram data.csv", encoding='latin1')
df['Caption'].head()

import re
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

def clean_text(text):
    text = str(text).lower()
    text = re.sub(r"http\S+", "", text)  # remove URLs
    text = re.sub(r"[^a-zA-Z\s]", "", text)  # remove special chars
    text = re.sub(r"\s+", " ", text)  # remove extra spaces
    stop_words = set(stopwords.words("english"))
    text = " ".join(word for word in text.split() if word not in stop_words)
    return text

df['Cleaned_Caption'] = df['Caption'].apply(clean_text)

from textblob import TextBlob

def get_sentiment(text):
    polarity = TextBlob(text).sentiment.polarity
    if polarity > 0:
        return "Positive"
    elif polarity < 0:
        return "Negative"
    else:
        return "Neutral"

df['Sentiment'] = df['Cleaned_Caption'].apply(get_sentiment)
df[['Caption', 'Sentiment']].head()

import seaborn as sns
import matplotlib.pyplot as plt

sns.countplot(data=df, x='Sentiment')
plt.title("Caption Sentiment Distribution")
plt.show()

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['Cleaned_Caption'])
y = df['Sentiment']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = MultinomialNB()
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)
print(classification_report(y_test, y_pred))